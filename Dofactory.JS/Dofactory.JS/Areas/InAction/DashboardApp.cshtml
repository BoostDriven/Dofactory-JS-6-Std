@{
    ViewBag.Title = "Dashboard app";
}

<style>
    a.clicker.active, a.clicker:hover { border: 1px solid #34b0b0 !important; }
</style>

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">Home</a></li>
    <li class="breadcrumb-item"><a href="/inaction">Patterns in Action</a></li>
    <li class="breadcrumb-item"><a href="/inaction/dashboard">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="/inaction/dashboardapp">App</a></li>
</ol>

<div class="row">
    <div class="col-9">
        <h2>Dashboard App</h2>
    </div>
    <div class="col-2 text-right">
        <a class="btn btn-red" href='/inaction/dashboard'>Close App</a>
    </div>
</div>

<br />
<br />
<br />

<div class="row">
    <div class="col-3">
        <h4>Results by month</h4><br />
        <span style="">Click summary buttons to view users, visits, and sales charts.</span>
    </div>
    <div class="col-9">

        <div class="d-flex pl-80 pb-20">



            <a id="link-users" href="javascript:void(0);" class="clicker no-underline text-center border font-20 width-130 active">
                <span class="btn d-block p-20 pt-25 bg-light">
                    8,429<br />
                    <span class="font-16">Users</span>
                </span>
            </a>
            <a id="link-visits" href="javascript:void(0);" class="clicker ml-30 no-underline text-center border font-20 width-130">
                <span class="btn d-block p-20 pt-25 bg-light">
                    188,022<br />
                    <span class="font-16">Visits</span>
                </span>
            </a>
            <a id="link-sales" href="javascript:void(0);" class="clicker ml-30 no-underline text-center border font-20 width-130">
                <span class="btn d-block p-20  pt-25 bg-light">
                    $23,390<br />
                    <span class="font-16">Sales</span>
                </span>
            </a>
        </div>
        <div id="plotarea" style="width:600px;height:300px;"></div>
    </div>
</div>
<br />
<br />
<br />
<div class="row">
    <hr />
    <div class="col-3">
        <h4>Visitor demographics</h4><br />
        <span>Hover over pie chart to view country percentages.</span>

    </div>
    <div class="col-9">
        <div id="piearea" style="width:300px;height:200px;"></div>
        <div id="hover" style="padding:20px 0 0 60px; visibility:hidden;"></div>
    </div>
</div>
<br />
<br />
<br />
<div class="row">
    <hr />
    <div class="col-3">
        <h4>Real-time page rendering</h4><br />
        <span>Avg # of pages rendered / per second / per server.</span>

    </div>
    <div class="col-9">
        <div id="realtime" style="width:600px;height:300px;"></div>
    </div>
</div>

<hr />

<script type="text/javascript">



</script>

@section scripts
{
    <script type="text/javascript">

        var Patterns = {
            // ** namespace pattern
            namespace: function (name) {

                // ** single var pattern
                var parts = name.split(".");
                var ns = this;

                // ** iterator pattern
                for (var i = 0, len = parts.length; i < len; i++) {
                    // ** || idiom
                    ns[parts[i]] = ns[parts[i]] || {};
                    ns = ns[parts[i]];
                }

                return ns;
            }
        };

        // ** namespace pattern
        // ** revealing module pattern
        // ** singleton pattern
        Patterns.namespace("InAction").Dashboard = (function () {

            // ** immediate function idiom
            var users = (function () {
                // ** lazy load pattern (using closure)
                var data;
                var show = function () {
                    // ** truthy/falsy idiom
                    // ** || idiom
                    data = data || get("users");
                    showPlot(data);
                }
                return { show: show };
            })();

            // ** immediate function idiom
            var visits = (function () {
                // ** lazy load pattern (using closure)
                var data;
                var show = function () {
                    // ** truthy/falsy idiom
                    // ** || idiom
                    data = data || get("visits");
                    showPlot(data);
                }
                return { show: show };
            })();

            // ** immediate function idiom
            var sales = (function () {
                // ** lazy load pattern (using closure)
                var data;
                var show = function () {
                    // ** truthy/falsy idiom
                    // ** || idiom
                    data = data || get("sales");
                    showPlot(data);
                }
                return { show: show };
            })();

            // ** strategy pattern
            var strategy = users;  // default strategy

            var showPlot = function (data) {

                // ** option hash idiom
                var options = {
                    legend: { position: "nw" },
                    lines: { show: true },
                    points: { show: true },
                    xaxis: { ticks: [[1, "jan"], [2, "feb"], [3, "mar"], [4, "apr"], [5, "may"], [6, "jun"], [7, "jul"], [8, "aug"], [9, "sep"], [10, "oct"], [11, "nov"], [12, "dec"]] },
                    grid: { backgroundColor: { colors: ["#fff", "#f5f6f7"] } }
                };

                $.plot($("#plotarea"), data, options);
            }

            var pieHover = function (event, pos, obj) {

                // ** truthy/falsy idiom
                // ** && idiom
                if (obj && obj.series) {
                    percent = parseFloat(obj.series.percent).toFixed(2);
                    $("#hover").html('<span style="font-weight: bold;">' + obj.series.label + ' (' + percent + '%)</span>');
                }
            }

            var pieClick = function (event, pos, obj) {

                // ** truthy/falsy idiom
                // ** && idiom
                if (obj && obj.series) {
                    percent = parseFloat(obj.series.percent).toFixed(2);
                    alert('' + obj.series.label + ': ' + percent + '%');
                }
            }

            var initPie = function () {
                var piedata = [
                    { label: "USA", data: 110 },
                    { label: "UK", data: 60 },
                    { label: "India", data: 50 },
                    { label: "Germany", data: 30 },
                    { label: "China", data: 24 },
                    { label: "Canada", data: 20 }
                ];

                var $piearea = $("#piearea");

                // ** option hash idiom
                $.plot($piearea, piedata,
                    {
                        series: {
                            pie: {
                                show: true
                            }
                        },
                        grid: {
                            hoverable: true,
                            clickable: true
                        }
                    });

                // ** chaining pattern
                $piearea.bind("plothover", pieHover)
                    .bind("plotclick", pieClick)
                    .hover(function () { $("#hover").css("visibility", "visible"); },
                        function () { $("#hover").css("visibility", "hidden"); }
                    );
            };

            var showLineChart = function () {
                strategy.show();
            }

            var initPlots = function () {

                // ** observer pattern
                $("#link-users").on('click', function () {
                    $('[id^="link-"]').removeClass("active");
                    $(this).addClass("active");

                    // ** strategy pattern
                    strategy = users;
                    showLineChart();
                });
                $("#link-visits").on('click', function () {
                    $('[id^="link-"]').removeClass("active");
                    $(this).addClass("active");

                    // ** strategy pattern
                    strategy = visits;
                    showLineChart();
                });
                $("#link-sales").on('click', function () {

                    $('[id^="link-"]').removeClass("active");
                    $(this).addClass("active");

                    // ** strategy pattern
                    strategy = sales;
                    showLineChart();
                });

                showLineChart();
            };

            var initRealtime = function () {

                var data = [];

                function getData() {
                    if (data.length > 0) data = data.slice(1);

                    // generate random data
                    while (data.length < 300) {

                        var prev = data.length > 0 ? data[data.length - 1] : 50;
                        var y = Math.round(prev + Math.random() * 5 - 2.5);

                        y = Math.max(Math.min(y, 100), 0); // range is 0 - 100;
                        data.push(y);
                    }

                    // return x and y coordinate pairs
                    var coordinates = [];
                    for (var x = 0; x < data.length; ++x) {
                        coordinates.push([x, data[x]])
                    }
                    return coordinates;
                }

                // ** option hash idiom
                var options = {
                    series: { shadowSize: 0 },
                    yaxis: { min: 0, max: 100 },
                    xaxis: { show: false },
                    colors: ["#cc0000"]
                };
                var plot = $.plot($("#realtime"), [getData()], options);

                function updateRealtime() {

                    plot.setData([getData()]);
                    plot.draw();   // call draw because axis did not change

                    // ** zero timeout pattern  (30 milliseconds)
                    setTimeout(updateRealtime, 30);
                }

                updateRealtime();
            };

            // mock server call
            var get = function (what) {
                switch (what) {
                    case "users": return [{ "label": "Users", "data": [[1, 344], [2, 578], [3, 460], [4, 902], [5, 1933], [6, 2303], [7, 3281], [8, 3590], [9, 6830], [10, 8429]] }];
                    case "visits": return [{ "label": "Visits", "data": [[1, 12965], [2, 16935], [3, 19993], [4, 21983], [5, 76801], [6, 67372], [7, 87922], [8, 100399], [9, 140332], [10, 188022]], "color": 2 }];
                    case "sales": return [{ "label": "Sales", "data": [[1, 266], [2, 1009], [3, 6754], [4, 6570], [5, 7489], [6, 8888], [7, 10821], [8, 14099], [9, 12222], [10, 23390]], "color": 3 }];
                    default: return [];
                }
            }

            var start = function () {
                initPlots();
                initPie();
                initRealtime();
            };

            return { start: start };
        })();


        $(function () {

            // First check for HTML5 canvas support

            // ** double !! idiom
            var supportsCanvas = !!document.createElement("canvas").getContext;
            if (!supportsCanvas) {
                // ** chained pattern
                $("#message").css("color", "red").html("It seems that your browser does not support HTML canvas. Please upgrade to a more recent version.");
                return;
            }

            // ** facade pattern
            var dashboard = Patterns.InAction.Dashboard;
            dashboard.start();
        });

                            //Dofactory.namespace("Local").Page = (function () {

                            //    var start = function () {

                            //    };

                            //    return { start: start };

                            //})();
                            //$(function () {
                            //    Dofactory.Local.Page.start();
                            //});
    </script>
}